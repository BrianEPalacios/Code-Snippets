##################################### React #########################################

<div className="container">

// if isLoggedIn is true, then it will render <h1> Hello </h1>, if it is false then it will render the Login component
     
     {isLoggedIn ? <h1>Hello</h1> : <Login />  }

</div>
###########
// if props.isRegistered is equals to false (making the statement true) then it will run whats after the &&
// if the statement is false, then it will default to null

{props.isRegistered === false && (<input type="password" placeholder="Confirm Password" />)}

#################### Arrow Functions ##########################

var numbers = [3, 56, 2, 48, 5];

// const newNumbers = numbers.map( x => x*x );
// console.log(newNumbers);

////Map -Create a new array by doing something with each item in an array.
// const newNumbers = numbers.map(function (x) {
//   return x * 2;
// });

const mapNumbers = numbers.map((x) => x * 2);
console.log(mapNumbers);

//////Filter - Create a new array by keeping the items that return true.
// const newNumbers = numbers.filter(function(num) {
//   return num < 10;
// });

const filterNumbers = numbers.filter((num) => num < 10);
console.log(filterNumbers);

//Reduce - Accumulate a value by doing something to each item in an array.
// var newNumber = numbers.reduce(function (accumulator, currentNumber) {
//     return accumulator + currentNumber;
// })

const reduceNumbers = numbers.reduce((x, y) => x + y);
console.log(reduceNumbers);

////Find - find the first item that matches from an array.
// const newNumber = numbers.find(function (num) {
//   return num > 10;
// })

const findNumber = numbers.find((num) => num > 10);
console.log(findNumber);

////FindIndex - find the index of the first item that matches.
// const newNumber = numbers.findIndex(function (num) {
//   return num > 10;
// })

const findIndexNumber = numbers.findIndex((num) => num > 10);
console.log(findIndexNumber);
